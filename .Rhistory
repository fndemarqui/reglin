names(resistencia) <- c("concentracao", "resistencia")
usethis::use_data(resistencia)
usethis::use_data(resistencia, overwrite = TRUE)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
ggplot(resistencia, aes(x = concentracao, y = resistencia)) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, degree = 2))
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "+ tensao + resistencia")
getwd()
tracao <- read.table("inst/stuff/tracao.txt", header=TRUE)
data("pureza")
usethis::use_data_raw(pureza)
?usethis::use_data_raw(pureza)
usethis::use_data_raw("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
usethis::use_data_raw("pureza", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
usethis::use_data_raw("pureza.csv", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza.csv")
usethis::use_data(pureza.csv, overwrite = TRUE)
data("pureza")
usethis::use_data_raw("pureza.csv")
usethis::use_data(pureza, file = "pureza.csv", overwrite = TRUE)
pureza
usethis::use_data(pureza, file = "pureza.csv", overwrite = TRUE)
usethis::use_data("pureza.csv", overwrite = TRUE)
?usethis::use_data("pureza.csv", overwrite = TRUE)
?usethis::use_data_raw()
write.csv(pureza, file = "data-raw/pureza.csv")
readr::write.csv(pureza, file = "data-raw/pureza.csv")
readr::write_csv(pureza, file = "data-raw/pureza.csv")
readr::write_csv(fibras, file = "data-raw/fibras.csv")
library(reglin)
devtools::load_all(".")
readr::write_csv(fibras, file = "data-raw/fibras.csv")
?resistencia
readr::write_csv(resistencia, file = "data-raw/resistencia.csv")
str(simdata)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# anexando os pacotes necessários:
library(reglin)
library(tidyverse)
library(ggpubr)
# fixando a semente:
set.seed(1234567890)
n <- 50
sigma <- 2
beta <- c(10, -2)
simdata <- data.frame(x=rnorm(n))
simdata <- simdata |>
mutate(
y = rlm(~x, beta = beta, sigma = sigma)
)
glimpse(simdata)
attributes(simdata$y)
devtools::load_all(".")
simdata <- simdata |>
mutate(
y = rlm(~x, beta = beta, sigma = sigma)
)
glimpse(simdata)
attributes(simdata$y)
class(simdata)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
# anexando os pacotes necessários:
library(reglin)
library(tidyverse)
library(ggpubr)
# fixando a semente:
set.seed(1234567890)
n <- 50
sigma <- 2
beta <- c(10, -2)
simdata <- data.frame(x=rnorm(n))
simdata <- simdata |>
mutate(
y = rlm(~x, beta = beta, sigma = sigma)
)
glimpse(simdata)
attributes(simdata$y)
devtools::load_all(".")
simdata <- simdata |>
mutate(
y = rlm(~x, beta = beta, sigma = sigma)
)
glimpse(simdata)
attributes(simdata$y)
df <- expand.grid(
A = rep(paste0("a", 1:3), each = 4),
B = rep(paste0("a", 1:4), each = 4)
)
view(df)
df <- expand.grid(
A = rep(paste0("a", 1:3), each = 4),
B = rep(paste0("b", 1:4), each = 4)
)
view(df)
df <- expand.grid(
A = rep(paste0("a", 1:3), each = 4),
B = rep(paste0("b", 1:2), each = 4)
)
view(df)
dim(df)
df <- expand.grid(
A = rep(paste0("a", 1:3), each = 4),
B = rep(paste0("b", 1:3), each = 4)
)
view(df)
dim(df)
df <- expand.grid(
A = rep(paste0("a", 1:3), each = 1),
B = rep(paste0("b", 1:3), each = 1)
)
view(df)
dim(df)
df <- expand_grid(
A = rep(paste0("a", 1:3), each = 1),
B = rep(paste0("b", 1:3), each = 1)
)
view(df)
dim(df)
df <- expand_grid(
A = rep(paste0("a", 1:3), each = 2),
B = rep(paste0("b", 1:3), each = 1)
)
view(df)
dim(df)
df <- expand_grid(
A = rep(paste0("a", 1:3), each = 2),
B = rep(paste0("b", 1:3), each = 2)
)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
n <- 3
df <- expand_grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = n)
)
view(df)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
library(planex)
library(tidyverse)
n <- 1
df <- expand_grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = n)
)
view(df)
#view(df)
dim(df)
n <- 2
df <- expand_grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = n)
)
#view(df)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
view(df)
n <- 2
df <- expand_grid(
A = rep(paste0("a", 1:2), each = n),
B = rep(paste0("b", 1:2), each = n)
)
#view(df)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
n <- 3
df <- expand_grid(
A = rep(paste0("a", 1:2), each = n),
B = rep(paste0("b", 1:2), each = n)
)
#view(df)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
n <- 3
df <- expand_grid(
A = rep(paste0("a", 1:2), each = sqrt(n)),
B = rep(paste0("b", 1:2), each = sqrt(n))
)
#view(df)
dim(df)
df |>
group_by(A, B) |>
reframe(
n = n()
)
# anexando os pacotes necessários:
library(reglin)
library(tidyverse)
library(ggpubr)
# fixando a semente:
set.seed(1234567890)
n <- 50
sigma <- 2
beta <- c(10, -2)
simdata <- data.frame(x=rnorm(n))
simdata <- simdata |>
mutate(
y = rlm(~x, beta = beta, sigma = sigma)
)
glimpse(simdata)
attributes(simdata$y)
class(simdata)
a <- attributes(simdata$y)
a$call
model.formula(a$call)
n <- 4 # número de réplicas
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
unique(model.matrix(~A*B, simdata))
n <- 4 # número de réplicas
sigma <- 0.2
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata))
beta <- c(
mu = 10, a2 = 2, a3=-0.5, b2 = 0.5, b3 = -1.5,
ab22 = -1, ab32 = -0.5, ab23 = 0.7, ab33 = -0.3
)
simdata <- simdata  |>
mutate(
y = rlm(~A*B, beta = beta, sigma = sigma)
)
library(tidyverse)
n <- 4 # número de réplicas
sigma <- 0.2
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata))
beta <- c(
mu = 10, a2 = 2, a3=-0.5, b2 = 0.5, b3 = -1.5,
ab22 = -1, ab32 = -0.5, ab23 = 0.7, ab33 = -0.3
)
simdata <- simdata  |>
mutate(
y = rlm(~A*B, beta = beta, sigma = sigma)
)
glimpse(simdata)
# ajustando o modelo:
fit <- aov(y ~ A*B, data = simdata)
library(tidyverse)
library(reglin)
n <- 4 # número de réplicas
sigma <- 0.2
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata))
beta <- c(
mu = 10, a2 = 2, a3=-0.5, b2 = 0.5, b3 = -1.5,
ab22 = -1, ab32 = -0.5, ab23 = 0.7, ab33 = -0.3
)
simdata <- simdata  |>
mutate(
y = rlm(~A*B, beta = beta, sigma = sigma)
)
glimpse(simdata)
# ajustando o modelo:
fit <- aov(y ~ A*B, data = simdata)
summary(fit)
cbind(beta, coef(fit))
n <- 10 # número de réplicas
sigma <- 0.2
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata))
beta <- c(
mu = 10, a2 = 2, a3=-0.5, b2 = 0.5, b3 = -1.5,
ab22 = -1, ab32 = -0.5, ab23 = 0.7, ab33 = -0.3
)
simdata <- simdata  |>
mutate(
y = rlm(~A*B, beta = beta, sigma = sigma)
)
glimpse(simdata)
# ajustando o modelo:
fit <- aov(y ~ A*B, data = simdata)
summary(fit)
cbind(beta, coef(fit))
n <- 50 # número de réplicas
sigma <- 0.2
simdata <- expand.grid(
A = rep(paste0("a", 1:3), each = n),
B = rep(paste0("b", 1:3), each = 1)
)
dim(simdata)
glimpse(simdata)
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata))
beta <- c(
mu = 10, a2 = 2, a3=-0.5, b2 = 0.5, b3 = -1.5,
ab22 = -1, ab32 = -0.5, ab23 = 0.7, ab33 = -0.3
)
simdata <- simdata  |>
mutate(
y = rlm(~A*B, beta = beta, sigma = sigma)
)
glimpse(simdata)
# ajustando o modelo:
fit <- aov(y ~ A*B, data = simdata)
summary(fit)
cbind(beta, coef(fit))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# visualizando a matriz do modelo:
unique(model.matrix(~A*B, simdata, contrasts.arg = list(A = "contr.sum", B = "contr.sum")))
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "add attributes to response")
gitcreds::gitcreds_set()
# commit message:
usethis::use_git(message = "add attributes to response")
R2 <- function(object, ...){
objects <- c(as.list(environment()), list(...))
argnames <- sys.call()
argnames <- paste0(lapply(argnames[-1], as.character))
#objects <- objects[-2]
J <- nargs()
R2 <- c()
for(j in 1:J){
press[j] <- PRESS(objects[[j]])
}
if(J>1){
R2 <- data.frame(
fit = argnames,
R2 = summary(object)$r.squared
) %>%
dplyr::arrange(R2)
}
return(R2)
}
R2(m1, m2)
m1
?anova.lm
roxygen2::roxygenize()
roxygen2::roxygenize()
?R2adj
roxygen2::roxygenize()
?R2
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::install()
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "vetorization of R2 and R2adj function")
estocagem <- rio::import("inst/stuff/escocagem.txt")
estocagem <- rio::import("inst/stuff/estocagem.txt")
usethis::use_data(estocagem)
names(estocagem)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "estocagem data")
library(reglin)
library(tidyverse)
data(estocagem)
glimpse(estocagem)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
ggplot(estocagem, aes(x=caixas, y=tempo)) +
geom_point()
fit1 <- lm(tempo ~ caixas, data = estocagem)
fit2 <- lm(tempo ~ 0 + caixas, data = estocagem)
fit3 <- lm(tempo ~ -1 + caixas, data = estocagem)
mod1 <- lm(tempo ~ caixas, data = estocagem)
mod2 <- lm(tempo ~ 0 + caixas, data = estocagem)
mod3 <- lm(tempo ~ -1 + caixas, data = estocagem)
summary(mod1)
mod2
mod3
e <- residuals(fit1)
e
sum(e)
estocagem <- estocagem |>
mutate(
e = residuals(mod2),
yc = fitted(mod2)
)
sum(estocagem$e)
with(estocagem, sum(e*caixas))
with(estocagem, sum(e*yc))
library(reglin)
reglin:::plot_cooksd
reglin::plot_cooksd
?gginfluence
