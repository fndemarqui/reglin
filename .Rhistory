#' @param sigma error standard deviation
#' @return a data.frame containing the generated data
#'
rlm <- function(formula, data, beta, sigma){
if((length(sigma) != 1) & (length(sigma) != nrow(data))) stop("sigma must be numeric or of size n!")
mf <- stats::model.frame(formula=formula, data=data)
X <- stats::model.matrix(formula, data = mf)
n <- nrow(X)
p <- ncol(X)
if(length(beta) !=p ){
warning("X and beta are incompatible")
}
data$y = as.numeric(X%*%beta) + rnorm(n, 0, sigma)
return(data)
}
devtools::load_all(".")
rm(list = c("rlm"))
devtools::load_all(".")
set.seed(1234567890)
n <- 100
cov <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
)
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = 1*x)
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = 1*x1)
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = 1*cov$x1)
cov$x1
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = cov$x1)
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = abs(cov$x1))
simdata <- rlm(~ x1 + x2, data = cov, beta = c(2.3, 1.7, 1), sigma = 1:2)
library(reglin)
set.seed(1234567890)
n <- 50
x <- 1:n
sigma <- 1
beta <- c(10, 1.5)
X <- cbind(1, x)
mu <- as.numeric(X%*%beta)
epsilon <- rnorm(n, mean = 0, sd = sigma*x)
y <- mu + epsilon
simdata <- data.frame(
x = x,
y = y
)
fit <- lm(y~x, data = simdata)
ggresiduals(fit)
roxygen2::roxygenize()
devtools::install()
devtools::build_vignettes()
devtools::build_site()
usethis::use_github_action("pkgdown")
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
usethis::use_mit_license()
usethis::use_github_action("pkgdown")
roxygen2::roxygenize()
devtools::install()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
library(tidyverse)
library(gganimate)
library(ggthemes)
library(gifski)
library(sn)
library(transformr)
animacoes = 50
size <- 200
library(tidyverse)
library(gganimate)
library(ggthemes)
library(gifski)
library(sn)
library(transformr)
animacoes = 50
size <- 200
dados <- tibble(
rep = rep(1:size, animacoes),
normal = as.vector(replicate(n = animacoes, rnorm(size), simplify = TRUE )),
tstudent = as.vector(replicate(n = animacoes, rt(size, df = 5), simplify = TRUE )),
`assimetria -` = as.vector(replicate(n = animacoes, rsn(size, alpha = -4), simplify = TRUE )),
`assimetria +` = as.vector(replicate(n = animacoes, rsn(size, alpha = 4), simplify = TRUE )),
) %>%
pivot_longer(2:5, names_to = "dist", values_to = "amostra")
glimpse(dados)
# criando a animação:
g <- ggplot(dados, aes(sample = amostra)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x="theorical", y = "sample") +
facet_wrap(~dist, scales="free") +
transition_states(rep)
animate(g, fps=1, renderer = gifski_renderer())
animate(g, fps=0.1, renderer = gifski_renderer())
set.seed(1234567890)
n <- 100
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*abs(x1))
)
fit <- lm(y ~ x1 + x2, data = simdata)
library(tidyverse)
library(reglin)
library(GGally)
set.seed(1234567890)
n <- 100
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*abs(x1))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
ggresiduals(fit)
library(GGally)
set.seed(1234567890)
n <- 100
n <- 100
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*abs(x1))
)
library(tidyverse)
library(reglin)
library(GGally)
set.seed(1234567890)
n <- 100
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*abs(x1))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
testResiduals(fit)
library(tidyverse)
library(reglin)
library(GGally)
set.seed(1234567890)
n <- 100
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*(x1^2))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
testResiduals(fit)
library(tidyverse)
library(reglin)
library(GGally)
set.seed(1234567890)
n <- 1000
simdata <- data.frame(
x1 = rnorm(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*(x1^2))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
n <- 1000
simdata <- data.frame(
x1 = runif(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*(x1^2))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
testResiduals(fit)
testResiduals(fit)
devtools::load_all(".")
library(tidyverse)
library(reglin)
library(GGally)
set.seed(1234567890)
n <- 100
simdata <- data.frame(
x1 = runif(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*(x1^2))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
n <- 1000
simdata <- data.frame(
x1 = runif(n),
x2 = rnorm(n)
) |>
mutate(
y = rlm(~ x1 + x2, beta = c(2.3, 1.7, 1), sigma = 1*(x1^2))
)
glimpse(simdata)
fit <- lm(y ~ x1 + x2, data = simdata)
ggresiduals(fit)
testResiduals(fit)
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
devtools::load_all(".")
set.seed(1234567890)
n <- 100
X <- cbind(1, rnorm(n))
beta <- c(1, 2)
epsilon <- rt(n, df = 2)
y <- as.numeric(X%*%beta) + epsilon
simdata <- data.frame(
x = x,
y = y
)
set.seed(1234567890)
n <- 100
x <- rnorm(n)
X <- cbind(1, x)
beta <- c(1, 2)
epsilon <- rt(n, df = 2)
y <- as.numeric(X%*%beta) + epsilon
simdata <- data.frame(
x = x,
y = y
)
glimpse(simdata)
library(tidyverse)
set.seed(1234567890)
n <- 100
x <- rnorm(n)
X <- cbind(1, x)
beta <- c(1, 2)
epsilon <- rt(n, df = 2)
y <- as.numeric(X%*%beta) + epsilon
simdata <- data.frame(
x = x,
y = y
)
glimpse(simdata)
fit <- lm(y~x, data = simdata)
ggresiduals(fit, type = "default")
devtools::load_all(".")
set.seed(1234567890)
n <- 100
x <- rnorm(n)
X <- cbind(1, x)
beta <- c(1, 2)
epsilon <- rt(n, df = 2)
y <- as.numeric(X%*%beta) + epsilon
simdata <- data.frame(
x = x,
y = y
)
glimpse(simdata)
fit <- lm(y~x, data = simdata)
ggresiduals(fit, type = "default")
testResiduals(fit)
devtools::load_all(".")
ggresiduals(fit)
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
?standardization
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# One time set-up with Git, Github, and Github Actions
# gitcreds::gitcreds_set()
# usethis::use_git(message = "Initial commit")
# usethis::use_github(private = FALSE)
# usethis::use_github_action("pkgdown")
usethis::use_pkgdown_github_pages()
# One time set-up with Git, Github, and Github Actions
gitcreds::gitcreds_set()
# One time set-up with Git, Github, and Github Actions
# gitcreds::gitcreds_set()
# usethis::use_git(message = "Initial commit")
# usethis::use_github(private = FALSE)
# usethis::use_github_action("pkgdown")
usethis::use_pkgdown_github_pages()
# One time set-up with Git, Github, and Github Actions
# gitcreds::gitcreds_set()
# usethis::use_git(message = "Initial commit")
# usethis::use_github(private = FALSE)
# usethis::use_github_action("pkgdown")
# usethis::use_pkgdown_github_pages()
usethis::use_github_action("check-standard")
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "implementation of standardization function")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
?acetileno
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
devtools::build_manual()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
# commit message:
usethis::use_git(message = "update acetileno doc")
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
data(entregas)
fit0 <- lm(tempo ~ 1, data = entregas)
fit1 <- lm(tempo ~ caixas, data = entregas)
fit2 <- lm(tempo ~ distancia, data = entregas)
fit3 <- lm(tempo ~ caixas + distancia, data = entregas)
fit4 <- lm(tempo ~ caixas*distancia, data = entregas)
press(fit1)
press(fit1, fit2)
fit0 <- lm(tempo ~ 1, data = entregas)
fit1 <- lm(tempo ~ caixas, data = entregas)
fit2 <- lm(tempo ~ distancia, data = entregas)
fit3 <- lm(tempo ~ caixas + distancia, data = entregas)
fit4 <- lm(tempo ~ caixas*distancia, data = entregas)
press(fit1)
press(fit1, fit2, fit3, fit4)
devtools::build_vignettes()
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_manual()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
?rstandard(object, type="pred")
rstandard(fit1, type="pred")
a <- rstandard(fit1, type="pred")
b <- residuals(fit1)/(1-hatvalues(fit1))
a <- rstandard(fit1, type="pred")
cbind(a, b)
diff(cbind(a, b))
cbind(a, b)
apply(cbind(a, b), 1, diff)
plot(a)
summary(fit4)
teste <- lm(tempo ~ . ^2)
teste <- lm(tempo ~ . ^2, data = entregas)
teste
press(fit1, fit2, fit3, fit4)
# commit message:
usethis::use_git(message = "+ press() function")
library(tidyverse)
library(RSADBE)
library(splines2)
library(reglin)
data(VD)
glimpse(VD)
head(VD)
names(VD) <- c("tempo", "tensao")
VD <- VD |>
arrange(tempo)
head(VD)
tensao <- VD
tensao
usethis::use_data(tensao)
glimpse(tensao)
usethis::use_git_ignore("inst/stuff")
usethis::use_build_ignore("inst/stuff")
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
tracao <- rio::import("inst/stuff/tracao.txt")
glimpse(tracao)
usethis::use_data(tracao)
tracao
names(tracao)
resistencia <- rio::import("inst/stuff/tracao.txt")
names(resistencia) <- c("concentracao", "resistencia")
usethis::use_data(resistencia)
usethis::use_data(resistencia, overwrite = TRUE)
roxygen2::roxygenize()
devtools::install()
devtools::load_all()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
ggplot(resistencia, aes(x = concentracao, y = resistencia)) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, degree = 2))
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
roxygen2::roxygenize()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::build_vignettes()
devtools::build_readme()
devtools::build_site()
# commit message:
usethis::use_git(message = "+ tensao + resistencia")
getwd()
tracao <- read.table("inst/stuff/tracao.txt", header=TRUE)
data("pureza")
usethis::use_data_raw(pureza)
?usethis::use_data_raw(pureza)
usethis::use_data_raw("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
usethis::use_data_raw("pureza", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza", ascii = TRUE)
usethis::use_data_raw("pureza.csv", ascii = TRUE)
data("pureza")
usethis::use_data_raw("pureza.csv")
usethis::use_data(pureza.csv, overwrite = TRUE)
data("pureza")
usethis::use_data_raw("pureza.csv")
usethis::use_data(pureza, file = "pureza.csv", overwrite = TRUE)
pureza
usethis::use_data(pureza, file = "pureza.csv", overwrite = TRUE)
usethis::use_data("pureza.csv", overwrite = TRUE)
?usethis::use_data("pureza.csv", overwrite = TRUE)
?usethis::use_data_raw()
write.csv(pureza, file = "data-raw/pureza.csv")
readr::write.csv(pureza, file = "data-raw/pureza.csv")
readr::write_csv(pureza, file = "data-raw/pureza.csv")
readr::write_csv(fibras, file = "data-raw/fibras.csv")
library(reglin)
devtools::load_all(".")
readr::write_csv(fibras, file = "data-raw/fibras.csv")
?resistencia
readr::write_csv(resistencia, file = "data-raw/resistencia.csv")
